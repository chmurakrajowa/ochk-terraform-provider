// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ReservationGetResponse ReservationGetResponse
//
// swagger:model ReservationGetResponse
type ReservationGetResponse struct {

	// messages
	Messages string `json:"messages,omitempty"`

	// reservation instance
	ReservationInstance *ReservationInstance `json:"reservationInstance,omitempty"`

	// success
	Success bool `json:"success,omitempty"`

	// timestamp
	// Format: date-time
	Timestamp *strfmt.DateTime `json:"timestamp,omitempty"`
}

// Validate validates this reservation get response
func (m *ReservationGetResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateReservationInstance(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ReservationGetResponse) validateReservationInstance(formats strfmt.Registry) error {

	if swag.IsZero(m.ReservationInstance) { // not required
		return nil
	}

	if m.ReservationInstance != nil {
		if err := m.ReservationInstance.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("reservationInstance")
			}
			return err
		}
	}

	return nil
}

func (m *ReservationGetResponse) validateTimestamp(formats strfmt.Registry) error {

	if swag.IsZero(m.Timestamp) { // not required
		return nil
	}

	if err := validate.FormatOf("timestamp", "body", "date-time", m.Timestamp.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ReservationGetResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReservationGetResponse) UnmarshalBinary(b []byte) error {
	var res ReservationGetResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
