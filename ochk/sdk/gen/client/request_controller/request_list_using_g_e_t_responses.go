// Code generated by go-swagger; DO NOT EDIT.

package request_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ochk/terraform-provider-ochk/ochk/sdk/gen/models"
)

// RequestListUsingGETReader is a Reader for the RequestListUsingGET structure.
type RequestListUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RequestListUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRequestListUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRequestListUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRequestListUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRequestListUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRequestListUsingGETOK creates a RequestListUsingGETOK with default headers values
func NewRequestListUsingGETOK() *RequestListUsingGETOK {
	return &RequestListUsingGETOK{}
}

/*RequestListUsingGETOK handles this case with default header values.

OK
*/
type RequestListUsingGETOK struct {
	Payload *models.RequestInstanceListResponse
}

func (o *RequestListUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /request/][%d] requestListUsingGETOK  %+v", 200, o.Payload)
}

func (o *RequestListUsingGETOK) GetPayload() *models.RequestInstanceListResponse {
	return o.Payload
}

func (o *RequestListUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RequestInstanceListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestListUsingGETUnauthorized creates a RequestListUsingGETUnauthorized with default headers values
func NewRequestListUsingGETUnauthorized() *RequestListUsingGETUnauthorized {
	return &RequestListUsingGETUnauthorized{}
}

/*RequestListUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type RequestListUsingGETUnauthorized struct {
}

func (o *RequestListUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /request/][%d] requestListUsingGETUnauthorized ", 401)
}

func (o *RequestListUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRequestListUsingGETForbidden creates a RequestListUsingGETForbidden with default headers values
func NewRequestListUsingGETForbidden() *RequestListUsingGETForbidden {
	return &RequestListUsingGETForbidden{}
}

/*RequestListUsingGETForbidden handles this case with default header values.

Forbidden
*/
type RequestListUsingGETForbidden struct {
}

func (o *RequestListUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /request/][%d] requestListUsingGETForbidden ", 403)
}

func (o *RequestListUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRequestListUsingGETNotFound creates a RequestListUsingGETNotFound with default headers values
func NewRequestListUsingGETNotFound() *RequestListUsingGETNotFound {
	return &RequestListUsingGETNotFound{}
}

/*RequestListUsingGETNotFound handles this case with default header values.

Not Found
*/
type RequestListUsingGETNotFound struct {
}

func (o *RequestListUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /request/][%d] requestListUsingGETNotFound ", 404)
}

func (o *RequestListUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
