// Code generated by go-swagger; DO NOT EDIT.

package security_policy_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ochk/terraform-provider-ochk/ochk/sdk/gen/models"
)

// ListUsingGET7Reader is a Reader for the ListUsingGET7 structure.
type ListUsingGET7Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListUsingGET7Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListUsingGET7OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListUsingGET7Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListUsingGET7Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListUsingGET7NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListUsingGET7OK creates a ListUsingGET7OK with default headers values
func NewListUsingGET7OK() *ListUsingGET7OK {
	return &ListUsingGET7OK{}
}

/*ListUsingGET7OK handles this case with default header values.

OK
*/
type ListUsingGET7OK struct {
	Payload *models.SecurityPolicyListResponse
}

func (o *ListUsingGET7OK) Error() string {
	return fmt.Sprintf("[GET /nsx/fw/sp/][%d] listUsingGET7OK  %+v", 200, o.Payload)
}

func (o *ListUsingGET7OK) GetPayload() *models.SecurityPolicyListResponse {
	return o.Payload
}

func (o *ListUsingGET7OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SecurityPolicyListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUsingGET7Unauthorized creates a ListUsingGET7Unauthorized with default headers values
func NewListUsingGET7Unauthorized() *ListUsingGET7Unauthorized {
	return &ListUsingGET7Unauthorized{}
}

/*ListUsingGET7Unauthorized handles this case with default header values.

Unauthorized
*/
type ListUsingGET7Unauthorized struct {
}

func (o *ListUsingGET7Unauthorized) Error() string {
	return fmt.Sprintf("[GET /nsx/fw/sp/][%d] listUsingGET7Unauthorized ", 401)
}

func (o *ListUsingGET7Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListUsingGET7Forbidden creates a ListUsingGET7Forbidden with default headers values
func NewListUsingGET7Forbidden() *ListUsingGET7Forbidden {
	return &ListUsingGET7Forbidden{}
}

/*ListUsingGET7Forbidden handles this case with default header values.

Forbidden
*/
type ListUsingGET7Forbidden struct {
}

func (o *ListUsingGET7Forbidden) Error() string {
	return fmt.Sprintf("[GET /nsx/fw/sp/][%d] listUsingGET7Forbidden ", 403)
}

func (o *ListUsingGET7Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListUsingGET7NotFound creates a ListUsingGET7NotFound with default headers values
func NewListUsingGET7NotFound() *ListUsingGET7NotFound {
	return &ListUsingGET7NotFound{}
}

/*ListUsingGET7NotFound handles this case with default header values.

Not Found
*/
type ListUsingGET7NotFound struct {
}

func (o *ListUsingGET7NotFound) Error() string {
	return fmt.Sprintf("[GET /nsx/fw/sp/][%d] listUsingGET7NotFound ", 404)
}

func (o *ListUsingGET7NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
