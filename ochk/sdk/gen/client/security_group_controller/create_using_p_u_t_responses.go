// Code generated by go-swagger; DO NOT EDIT.

package security_group_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ochk/terraform-provider-ochk/ochk/sdk/gen/models"
)

// CreateUsingPUTReader is a Reader for the CreateUsingPUT structure.
type CreateUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateUsingPUTOK creates a CreateUsingPUTOK with default headers values
func NewCreateUsingPUTOK() *CreateUsingPUTOK {
	return &CreateUsingPUTOK{}
}

/*CreateUsingPUTOK handles this case with default header values.

OK
*/
type CreateUsingPUTOK struct {
	Payload *models.CreateResponse
}

func (o *CreateUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /nsx/sg/][%d] createUsingPUTOK  %+v", 200, o.Payload)
}

func (o *CreateUsingPUTOK) GetPayload() *models.CreateResponse {
	return o.Payload
}

func (o *CreateUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUsingPUTCreated creates a CreateUsingPUTCreated with default headers values
func NewCreateUsingPUTCreated() *CreateUsingPUTCreated {
	return &CreateUsingPUTCreated{}
}

/*CreateUsingPUTCreated handles this case with default header values.

Created
*/
type CreateUsingPUTCreated struct {
}

func (o *CreateUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /nsx/sg/][%d] createUsingPUTCreated ", 201)
}

func (o *CreateUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateUsingPUTUnauthorized creates a CreateUsingPUTUnauthorized with default headers values
func NewCreateUsingPUTUnauthorized() *CreateUsingPUTUnauthorized {
	return &CreateUsingPUTUnauthorized{}
}

/*CreateUsingPUTUnauthorized handles this case with default header values.

Unauthorized
*/
type CreateUsingPUTUnauthorized struct {
}

func (o *CreateUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /nsx/sg/][%d] createUsingPUTUnauthorized ", 401)
}

func (o *CreateUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateUsingPUTForbidden creates a CreateUsingPUTForbidden with default headers values
func NewCreateUsingPUTForbidden() *CreateUsingPUTForbidden {
	return &CreateUsingPUTForbidden{}
}

/*CreateUsingPUTForbidden handles this case with default header values.

Forbidden
*/
type CreateUsingPUTForbidden struct {
}

func (o *CreateUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /nsx/sg/][%d] createUsingPUTForbidden ", 403)
}

func (o *CreateUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateUsingPUTNotFound creates a CreateUsingPUTNotFound with default headers values
func NewCreateUsingPUTNotFound() *CreateUsingPUTNotFound {
	return &CreateUsingPUTNotFound{}
}

/*CreateUsingPUTNotFound handles this case with default header values.

Not Found
*/
type CreateUsingPUTNotFound struct {
}

func (o *CreateUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /nsx/sg/][%d] createUsingPUTNotFound ", 404)
}

func (o *CreateUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
