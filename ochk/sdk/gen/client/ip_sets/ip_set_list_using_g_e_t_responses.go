// Code generated by go-swagger; DO NOT EDIT.

package ip_sets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ochk/terraform-provider-ochk/ochk/sdk/gen/models"
)

// IPSetListUsingGETReader is a Reader for the IPSetListUsingGET structure.
type IPSetListUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IPSetListUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIPSetListUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewIPSetListUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewIPSetListUsingGETOK creates a IPSetListUsingGETOK with default headers values
func NewIPSetListUsingGETOK() *IPSetListUsingGETOK {
	return &IPSetListUsingGETOK{}
}

/*IPSetListUsingGETOK handles this case with default header values.

OK
*/
type IPSetListUsingGETOK struct {
	Payload *models.IPSetListResponse
}

func (o *IPSetListUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /network/ipsets][%d] ipSetListUsingGETOK  %+v", 200, o.Payload)
}

func (o *IPSetListUsingGETOK) GetPayload() *models.IPSetListResponse {
	return o.Payload
}

func (o *IPSetListUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IPSetListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIPSetListUsingGETBadRequest creates a IPSetListUsingGETBadRequest with default headers values
func NewIPSetListUsingGETBadRequest() *IPSetListUsingGETBadRequest {
	return &IPSetListUsingGETBadRequest{}
}

/*IPSetListUsingGETBadRequest handles this case with default header values.

Bad request, error occurred. For more details see log messages.
*/
type IPSetListUsingGETBadRequest struct {
}

func (o *IPSetListUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /network/ipsets][%d] ipSetListUsingGETBadRequest ", 400)
}

func (o *IPSetListUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
