// Code generated by go-swagger; DO NOT EDIT.

package gateway_policy_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ochk/terraform-provider-ochk/ochk/sdk/gen/models"
)

// GetUsingGET1Reader is a Reader for the GetUsingGET1 structure.
type GetUsingGET1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUsingGET1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUsingGET1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetUsingGET1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUsingGET1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUsingGET1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUsingGET1OK creates a GetUsingGET1OK with default headers values
func NewGetUsingGET1OK() *GetUsingGET1OK {
	return &GetUsingGET1OK{}
}

/*GetUsingGET1OK handles this case with default header values.

OK
*/
type GetUsingGET1OK struct {
	Payload *models.GatewayPolicyGetResponse
}

func (o *GetUsingGET1OK) Error() string {
	return fmt.Sprintf("[GET /nsx/fw/gp/{gatewayPolicyId}][%d] getUsingGET1OK  %+v", 200, o.Payload)
}

func (o *GetUsingGET1OK) GetPayload() *models.GatewayPolicyGetResponse {
	return o.Payload
}

func (o *GetUsingGET1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayPolicyGetResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsingGET1Unauthorized creates a GetUsingGET1Unauthorized with default headers values
func NewGetUsingGET1Unauthorized() *GetUsingGET1Unauthorized {
	return &GetUsingGET1Unauthorized{}
}

/*GetUsingGET1Unauthorized handles this case with default header values.

Unauthorized
*/
type GetUsingGET1Unauthorized struct {
}

func (o *GetUsingGET1Unauthorized) Error() string {
	return fmt.Sprintf("[GET /nsx/fw/gp/{gatewayPolicyId}][%d] getUsingGET1Unauthorized ", 401)
}

func (o *GetUsingGET1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUsingGET1Forbidden creates a GetUsingGET1Forbidden with default headers values
func NewGetUsingGET1Forbidden() *GetUsingGET1Forbidden {
	return &GetUsingGET1Forbidden{}
}

/*GetUsingGET1Forbidden handles this case with default header values.

Forbidden
*/
type GetUsingGET1Forbidden struct {
}

func (o *GetUsingGET1Forbidden) Error() string {
	return fmt.Sprintf("[GET /nsx/fw/gp/{gatewayPolicyId}][%d] getUsingGET1Forbidden ", 403)
}

func (o *GetUsingGET1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUsingGET1NotFound creates a GetUsingGET1NotFound with default headers values
func NewGetUsingGET1NotFound() *GetUsingGET1NotFound {
	return &GetUsingGET1NotFound{}
}

/*GetUsingGET1NotFound handles this case with default header values.

Not Found
*/
type GetUsingGET1NotFound struct {
}

func (o *GetUsingGET1NotFound) Error() string {
	return fmt.Sprintf("[GET /nsx/fw/gp/{gatewayPolicyId}][%d] getUsingGET1NotFound ", 404)
}

func (o *GetUsingGET1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
