// Code generated by go-swagger; DO NOT EDIT.

package gateway_policy_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ochk/terraform-provider-ochk/ochk/sdk/gen/models"
)

// ListUsingGET2Reader is a Reader for the ListUsingGET2 structure.
type ListUsingGET2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListUsingGET2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListUsingGET2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListUsingGET2Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListUsingGET2Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListUsingGET2NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListUsingGET2OK creates a ListUsingGET2OK with default headers values
func NewListUsingGET2OK() *ListUsingGET2OK {
	return &ListUsingGET2OK{}
}

/*ListUsingGET2OK handles this case with default header values.

OK
*/
type ListUsingGET2OK struct {
	Payload *models.GatewayPolicyListResponse
}

func (o *ListUsingGET2OK) Error() string {
	return fmt.Sprintf("[GET /nsx/fw/gp/][%d] listUsingGET2OK  %+v", 200, o.Payload)
}

func (o *ListUsingGET2OK) GetPayload() *models.GatewayPolicyListResponse {
	return o.Payload
}

func (o *ListUsingGET2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GatewayPolicyListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUsingGET2Unauthorized creates a ListUsingGET2Unauthorized with default headers values
func NewListUsingGET2Unauthorized() *ListUsingGET2Unauthorized {
	return &ListUsingGET2Unauthorized{}
}

/*ListUsingGET2Unauthorized handles this case with default header values.

Unauthorized
*/
type ListUsingGET2Unauthorized struct {
}

func (o *ListUsingGET2Unauthorized) Error() string {
	return fmt.Sprintf("[GET /nsx/fw/gp/][%d] listUsingGET2Unauthorized ", 401)
}

func (o *ListUsingGET2Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListUsingGET2Forbidden creates a ListUsingGET2Forbidden with default headers values
func NewListUsingGET2Forbidden() *ListUsingGET2Forbidden {
	return &ListUsingGET2Forbidden{}
}

/*ListUsingGET2Forbidden handles this case with default header values.

Forbidden
*/
type ListUsingGET2Forbidden struct {
}

func (o *ListUsingGET2Forbidden) Error() string {
	return fmt.Sprintf("[GET /nsx/fw/gp/][%d] listUsingGET2Forbidden ", 403)
}

func (o *ListUsingGET2Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListUsingGET2NotFound creates a ListUsingGET2NotFound with default headers values
func NewListUsingGET2NotFound() *ListUsingGET2NotFound {
	return &ListUsingGET2NotFound{}
}

/*ListUsingGET2NotFound handles this case with default header values.

Not Found
*/
type ListUsingGET2NotFound struct {
}

func (o *ListUsingGET2NotFound) Error() string {
	return fmt.Sprintf("[GET /nsx/fw/gp/][%d] listUsingGET2NotFound ", 404)
}

func (o *ListUsingGET2NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
