// Code generated by go-swagger; DO NOT EDIT.

package firewall_rules_s_n

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// GFWRuleGetUsingGETReader is a Reader for the GFWRuleGetUsingGET structure.
type GFWRuleGetUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GFWRuleGetUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGFWRuleGetUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGFWRuleGetUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGFWRuleGetUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGFWRuleGetUsingGETOK creates a GFWRuleGetUsingGETOK with default headers values
func NewGFWRuleGetUsingGETOK() *GFWRuleGetUsingGETOK {
	return &GFWRuleGetUsingGETOK{}
}

/*GFWRuleGetUsingGETOK handles this case with default header values.

OK
*/
type GFWRuleGetUsingGETOK struct {
	Payload *models.GFWRuleGetResponse
}

func (o *GFWRuleGetUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /network/firewall/gateway-policies/{gatewayPolicyId}/rules/{ruleId}][%d] gFWRuleGetUsingGETOK  %+v", 200, o.Payload)
}

func (o *GFWRuleGetUsingGETOK) GetPayload() *models.GFWRuleGetResponse {
	return o.Payload
}

func (o *GFWRuleGetUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GFWRuleGetResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGFWRuleGetUsingGETBadRequest creates a GFWRuleGetUsingGETBadRequest with default headers values
func NewGFWRuleGetUsingGETBadRequest() *GFWRuleGetUsingGETBadRequest {
	return &GFWRuleGetUsingGETBadRequest{}
}

/*GFWRuleGetUsingGETBadRequest handles this case with default header values.

Bad request, error occurred. For more details see log messages.
*/
type GFWRuleGetUsingGETBadRequest struct {
}

func (o *GFWRuleGetUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /network/firewall/gateway-policies/{gatewayPolicyId}/rules/{ruleId}][%d] gFWRuleGetUsingGETBadRequest ", 400)
}

func (o *GFWRuleGetUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGFWRuleGetUsingGETNotFound creates a GFWRuleGetUsingGETNotFound with default headers values
func NewGFWRuleGetUsingGETNotFound() *GFWRuleGetUsingGETNotFound {
	return &GFWRuleGetUsingGETNotFound{}
}

/*GFWRuleGetUsingGETNotFound handles this case with default header values.

Entity not found.
*/
type GFWRuleGetUsingGETNotFound struct {
}

func (o *GFWRuleGetUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /network/firewall/gateway-policies/{gatewayPolicyId}/rules/{ruleId}][%d] gFWRuleGetUsingGETNotFound ", 404)
}

func (o *GFWRuleGetUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
