// Code generated by go-swagger; DO NOT EDIT.

package subtenant_custom_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// NewMemberCreateUsingPUTParams creates a new MemberCreateUsingPUTParams object
// with the default values initialized.
func NewMemberCreateUsingPUTParams() *MemberCreateUsingPUTParams {
	var ()
	return &MemberCreateUsingPUTParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewMemberCreateUsingPUTParamsWithTimeout creates a new MemberCreateUsingPUTParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewMemberCreateUsingPUTParamsWithTimeout(timeout time.Duration) *MemberCreateUsingPUTParams {
	var ()
	return &MemberCreateUsingPUTParams{

		timeout: timeout,
	}
}

// NewMemberCreateUsingPUTParamsWithContext creates a new MemberCreateUsingPUTParams object
// with the default values initialized, and the ability to set a context for a request
func NewMemberCreateUsingPUTParamsWithContext(ctx context.Context) *MemberCreateUsingPUTParams {
	var ()
	return &MemberCreateUsingPUTParams{

		Context: ctx,
	}
}

// NewMemberCreateUsingPUTParamsWithHTTPClient creates a new MemberCreateUsingPUTParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewMemberCreateUsingPUTParamsWithHTTPClient(client *http.Client) *MemberCreateUsingPUTParams {
	var ()
	return &MemberCreateUsingPUTParams{
		HTTPClient: client,
	}
}

/*MemberCreateUsingPUTParams contains all the parameters to send to the API endpoint
for the member create using p u t operation typically these are written to a http.Request
*/
type MemberCreateUsingPUTParams struct {

	/*GroupID
	  groupId

	*/
	GroupID string
	/*SubtenantID
	  subtenantId

	*/
	SubtenantID string
	/*UserInstance
	  userInstance

	*/
	UserInstance *models.UserInstance

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the member create using p u t params
func (o *MemberCreateUsingPUTParams) WithTimeout(timeout time.Duration) *MemberCreateUsingPUTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the member create using p u t params
func (o *MemberCreateUsingPUTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the member create using p u t params
func (o *MemberCreateUsingPUTParams) WithContext(ctx context.Context) *MemberCreateUsingPUTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the member create using p u t params
func (o *MemberCreateUsingPUTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the member create using p u t params
func (o *MemberCreateUsingPUTParams) WithHTTPClient(client *http.Client) *MemberCreateUsingPUTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the member create using p u t params
func (o *MemberCreateUsingPUTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithGroupID adds the groupID to the member create using p u t params
func (o *MemberCreateUsingPUTParams) WithGroupID(groupID string) *MemberCreateUsingPUTParams {
	o.SetGroupID(groupID)
	return o
}

// SetGroupID adds the groupId to the member create using p u t params
func (o *MemberCreateUsingPUTParams) SetGroupID(groupID string) {
	o.GroupID = groupID
}

// WithSubtenantID adds the subtenantID to the member create using p u t params
func (o *MemberCreateUsingPUTParams) WithSubtenantID(subtenantID string) *MemberCreateUsingPUTParams {
	o.SetSubtenantID(subtenantID)
	return o
}

// SetSubtenantID adds the subtenantId to the member create using p u t params
func (o *MemberCreateUsingPUTParams) SetSubtenantID(subtenantID string) {
	o.SubtenantID = subtenantID
}

// WithUserInstance adds the userInstance to the member create using p u t params
func (o *MemberCreateUsingPUTParams) WithUserInstance(userInstance *models.UserInstance) *MemberCreateUsingPUTParams {
	o.SetUserInstance(userInstance)
	return o
}

// SetUserInstance adds the userInstance to the member create using p u t params
func (o *MemberCreateUsingPUTParams) SetUserInstance(userInstance *models.UserInstance) {
	o.UserInstance = userInstance
}

// WriteToRequest writes these params to a swagger request
func (o *MemberCreateUsingPUTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param groupId
	if err := r.SetPathParam("groupId", o.GroupID); err != nil {
		return err
	}

	// path param subtenantId
	if err := r.SetPathParam("subtenantId", o.SubtenantID); err != nil {
		return err
	}

	if o.UserInstance != nil {
		if err := r.SetBodyParam(o.UserInstance); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
