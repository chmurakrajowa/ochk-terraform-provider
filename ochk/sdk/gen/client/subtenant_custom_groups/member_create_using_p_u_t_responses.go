// Code generated by go-swagger; DO NOT EDIT.

package subtenant_custom_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// MemberCreateUsingPUTReader is a Reader for the MemberCreateUsingPUT structure.
type MemberCreateUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MemberCreateUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewMemberCreateUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewMemberCreateUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewMemberCreateUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewMemberCreateUsingPUTOK creates a MemberCreateUsingPUTOK with default headers values
func NewMemberCreateUsingPUTOK() *MemberCreateUsingPUTOK {
	return &MemberCreateUsingPUTOK{}
}

/*MemberCreateUsingPUTOK handles this case with default header values.

OK
*/
type MemberCreateUsingPUTOK struct {
	Payload *models.CreateMemberResponse
}

func (o *MemberCreateUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /subtenants/{subtenantId}/groups/{groupId}/members][%d] memberCreateUsingPUTOK  %+v", 200, o.Payload)
}

func (o *MemberCreateUsingPUTOK) GetPayload() *models.CreateMemberResponse {
	return o.Payload
}

func (o *MemberCreateUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateMemberResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMemberCreateUsingPUTCreated creates a MemberCreateUsingPUTCreated with default headers values
func NewMemberCreateUsingPUTCreated() *MemberCreateUsingPUTCreated {
	return &MemberCreateUsingPUTCreated{}
}

/*MemberCreateUsingPUTCreated handles this case with default header values.

Entity has been created
*/
type MemberCreateUsingPUTCreated struct {
	Payload *models.CreateMemberResponse
}

func (o *MemberCreateUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /subtenants/{subtenantId}/groups/{groupId}/members][%d] memberCreateUsingPUTCreated  %+v", 201, o.Payload)
}

func (o *MemberCreateUsingPUTCreated) GetPayload() *models.CreateMemberResponse {
	return o.Payload
}

func (o *MemberCreateUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CreateMemberResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMemberCreateUsingPUTBadRequest creates a MemberCreateUsingPUTBadRequest with default headers values
func NewMemberCreateUsingPUTBadRequest() *MemberCreateUsingPUTBadRequest {
	return &MemberCreateUsingPUTBadRequest{}
}

/*MemberCreateUsingPUTBadRequest handles this case with default header values.

Bad request, error occurred. For more details see log messages.
*/
type MemberCreateUsingPUTBadRequest struct {
}

func (o *MemberCreateUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /subtenants/{subtenantId}/groups/{groupId}/members][%d] memberCreateUsingPUTBadRequest ", 400)
}

func (o *MemberCreateUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
