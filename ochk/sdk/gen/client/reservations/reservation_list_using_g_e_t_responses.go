// Code generated by go-swagger; DO NOT EDIT.

package reservations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// ReservationListUsingGETReader is a Reader for the ReservationListUsingGET structure.
type ReservationListUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReservationListUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReservationListUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReservationListUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReservationListUsingGETOK creates a ReservationListUsingGETOK with default headers values
func NewReservationListUsingGETOK() *ReservationListUsingGETOK {
	return &ReservationListUsingGETOK{}
}

/*ReservationListUsingGETOK handles this case with default header values.

OK
*/
type ReservationListUsingGETOK struct {
	Payload *models.ReservationListResponse
}

func (o *ReservationListUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /subtenants/{subtenantId}/reservations][%d] reservationListUsingGETOK  %+v", 200, o.Payload)
}

func (o *ReservationListUsingGETOK) GetPayload() *models.ReservationListResponse {
	return o.Payload
}

func (o *ReservationListUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReservationListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReservationListUsingGETBadRequest creates a ReservationListUsingGETBadRequest with default headers values
func NewReservationListUsingGETBadRequest() *ReservationListUsingGETBadRequest {
	return &ReservationListUsingGETBadRequest{}
}

/*ReservationListUsingGETBadRequest handles this case with default header values.

Bad request, error occurred. For more details see log messages.
*/
type ReservationListUsingGETBadRequest struct {
}

func (o *ReservationListUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /subtenants/{subtenantId}/reservations][%d] reservationListUsingGETBadRequest ", 400)
}

func (o *ReservationListUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
