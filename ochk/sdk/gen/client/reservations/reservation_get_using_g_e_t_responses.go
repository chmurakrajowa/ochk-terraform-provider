// Code generated by go-swagger; DO NOT EDIT.

package reservations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// ReservationGetUsingGETReader is a Reader for the ReservationGetUsingGET structure.
type ReservationGetUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReservationGetUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReservationGetUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReservationGetUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReservationGetUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReservationGetUsingGETOK creates a ReservationGetUsingGETOK with default headers values
func NewReservationGetUsingGETOK() *ReservationGetUsingGETOK {
	return &ReservationGetUsingGETOK{}
}

/*ReservationGetUsingGETOK handles this case with default header values.

OK
*/
type ReservationGetUsingGETOK struct {
	Payload *models.ReservationGetResponse
}

func (o *ReservationGetUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /subtenants/{subtenantId}/reservations/{reservationId}][%d] reservationGetUsingGETOK  %+v", 200, o.Payload)
}

func (o *ReservationGetUsingGETOK) GetPayload() *models.ReservationGetResponse {
	return o.Payload
}

func (o *ReservationGetUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReservationGetResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReservationGetUsingGETBadRequest creates a ReservationGetUsingGETBadRequest with default headers values
func NewReservationGetUsingGETBadRequest() *ReservationGetUsingGETBadRequest {
	return &ReservationGetUsingGETBadRequest{}
}

/*ReservationGetUsingGETBadRequest handles this case with default header values.

Bad request, error occurred. For more details see log messages.
*/
type ReservationGetUsingGETBadRequest struct {
}

func (o *ReservationGetUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /subtenants/{subtenantId}/reservations/{reservationId}][%d] reservationGetUsingGETBadRequest ", 400)
}

func (o *ReservationGetUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReservationGetUsingGETNotFound creates a ReservationGetUsingGETNotFound with default headers values
func NewReservationGetUsingGETNotFound() *ReservationGetUsingGETNotFound {
	return &ReservationGetUsingGETNotFound{}
}

/*ReservationGetUsingGETNotFound handles this case with default header values.

Entity not found.
*/
type ReservationGetUsingGETNotFound struct {
}

func (o *ReservationGetUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /subtenants/{subtenantId}/reservations/{reservationId}][%d] reservationGetUsingGETNotFound ", 404)
}

func (o *ReservationGetUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
