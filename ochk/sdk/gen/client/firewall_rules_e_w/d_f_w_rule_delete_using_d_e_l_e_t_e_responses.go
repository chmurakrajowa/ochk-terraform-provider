// Code generated by go-swagger; DO NOT EDIT.

package firewall_rules_e_w

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/chmurakrajowa/terraform-provider-ochk/ochk/sdk/gen/models"
)

// DFWRuleDeleteUsingDELETEReader is a Reader for the DFWRuleDeleteUsingDELETE structure.
type DFWRuleDeleteUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DFWRuleDeleteUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDFWRuleDeleteUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDFWRuleDeleteUsingDELETEBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDFWRuleDeleteUsingDELETEOK creates a DFWRuleDeleteUsingDELETEOK with default headers values
func NewDFWRuleDeleteUsingDELETEOK() *DFWRuleDeleteUsingDELETEOK {
	return &DFWRuleDeleteUsingDELETEOK{}
}

/*DFWRuleDeleteUsingDELETEOK handles this case with default header values.

OK
*/
type DFWRuleDeleteUsingDELETEOK struct {
	Payload *models.DeleteDFWRuleResponse
}

func (o *DFWRuleDeleteUsingDELETEOK) Error() string {
	return fmt.Sprintf("[DELETE /network/firewall/security-policies/{securityPolicyId}/rules/{ruleId}][%d] dFWRuleDeleteUsingDELETEOK  %+v", 200, o.Payload)
}

func (o *DFWRuleDeleteUsingDELETEOK) GetPayload() *models.DeleteDFWRuleResponse {
	return o.Payload
}

func (o *DFWRuleDeleteUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeleteDFWRuleResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDFWRuleDeleteUsingDELETEBadRequest creates a DFWRuleDeleteUsingDELETEBadRequest with default headers values
func NewDFWRuleDeleteUsingDELETEBadRequest() *DFWRuleDeleteUsingDELETEBadRequest {
	return &DFWRuleDeleteUsingDELETEBadRequest{}
}

/*DFWRuleDeleteUsingDELETEBadRequest handles this case with default header values.

Bad request, error occurred. For more details see log messages.
*/
type DFWRuleDeleteUsingDELETEBadRequest struct {
}

func (o *DFWRuleDeleteUsingDELETEBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /network/firewall/security-policies/{securityPolicyId}/rules/{ruleId}][%d] dFWRuleDeleteUsingDELETEBadRequest ", 400)
}

func (o *DFWRuleDeleteUsingDELETEBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
