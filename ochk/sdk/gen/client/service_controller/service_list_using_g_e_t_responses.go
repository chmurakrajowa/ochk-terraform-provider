// Code generated by go-swagger; DO NOT EDIT.

package service_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ochk/terraform-provider-ochk/ochk/sdk/gen/models"
)

// ServiceListUsingGETReader is a Reader for the ServiceListUsingGET structure.
type ServiceListUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServiceListUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewServiceListUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewServiceListUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewServiceListUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewServiceListUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewServiceListUsingGETOK creates a ServiceListUsingGETOK with default headers values
func NewServiceListUsingGETOK() *ServiceListUsingGETOK {
	return &ServiceListUsingGETOK{}
}

/*ServiceListUsingGETOK handles this case with default header values.

OK
*/
type ServiceListUsingGETOK struct {
	Payload *models.ServiceListResponse
}

func (o *ServiceListUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /nsx/cs/][%d] serviceListUsingGETOK  %+v", 200, o.Payload)
}

func (o *ServiceListUsingGETOK) GetPayload() *models.ServiceListResponse {
	return o.Payload
}

func (o *ServiceListUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServiceListUsingGETUnauthorized creates a ServiceListUsingGETUnauthorized with default headers values
func NewServiceListUsingGETUnauthorized() *ServiceListUsingGETUnauthorized {
	return &ServiceListUsingGETUnauthorized{}
}

/*ServiceListUsingGETUnauthorized handles this case with default header values.

Unauthorized
*/
type ServiceListUsingGETUnauthorized struct {
}

func (o *ServiceListUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /nsx/cs/][%d] serviceListUsingGETUnauthorized ", 401)
}

func (o *ServiceListUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewServiceListUsingGETForbidden creates a ServiceListUsingGETForbidden with default headers values
func NewServiceListUsingGETForbidden() *ServiceListUsingGETForbidden {
	return &ServiceListUsingGETForbidden{}
}

/*ServiceListUsingGETForbidden handles this case with default header values.

Forbidden
*/
type ServiceListUsingGETForbidden struct {
}

func (o *ServiceListUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /nsx/cs/][%d] serviceListUsingGETForbidden ", 403)
}

func (o *ServiceListUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewServiceListUsingGETNotFound creates a ServiceListUsingGETNotFound with default headers values
func NewServiceListUsingGETNotFound() *ServiceListUsingGETNotFound {
	return &ServiceListUsingGETNotFound{}
}

/*ServiceListUsingGETNotFound handles this case with default header values.

Not Found
*/
type ServiceListUsingGETNotFound struct {
}

func (o *ServiceListUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /nsx/cs/][%d] serviceListUsingGETNotFound ", 404)
}

func (o *ServiceListUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
